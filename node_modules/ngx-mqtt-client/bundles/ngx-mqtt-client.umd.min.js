!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("mqtt"),require("rxjs/Observable"),require("rxjs/Subject"),require("rxjs/observable/fromPromise"),require("rxjs/operators"),require("rxjs/observable/of"),require("rxjs/BehaviorSubject"),require("rxjs/add/observable/throw"),require("rxjs/observable/concat")):"function"==typeof define&&define.amd?define("ngx-mqtt-client",["exports","@angular/core","mqtt","rxjs/Observable","rxjs/Subject","rxjs/observable/fromPromise","rxjs/operators","rxjs/observable/of","rxjs/BehaviorSubject","rxjs/add/observable/throw","rxjs/observable/concat"],e):e(t["ngx-mqtt-client"]={},t.ng.core,t.mqtt,t.Rx,t.Rx,t.Rx.Observable,t.Rx.Observable.prototype,t.Rx.Observable,t.Rx,t.Rx.Observable,t.Rx.Observable)}(this,function(t,e,o,r,n,u,i,a,s,c,f){"use strict";var p=new e.InjectionToken("mqtt configuration"),b=function(t){this.topic=t.topic,this.qos=t.qos},l=new e.InjectionToken("mqtt mock"),h=function(){function t(t,e){this._mqttMock=e,this._status=new s.BehaviorSubject(0),this._store={},t.manageConnectionManually||this.connect(t)}return t.prototype.connect=function(t){var r=this;this._client&&this._client.connected&&this._client.end(!0),this._client=this._mqttMock?this._mqttMock.connect(null,t):o.connect(null,t),this._client.on("message",function(t,e){return r.updateTopic(t,e.toString())}),this._client.on("offline",function(){return r._status.next(1)}),this._client.on("connect",function(){return r._status.next(0)})},t.prototype.subscribeTo=function(s,c){var o=this;return this._status.pipe(i.switchMap(function(t){if(1===t)return o.throwError();if(o._store[s]){var e=o._store[s].grant,r=o._store[s].stream;return r.observers.forEach(function(t){return t.complete()}),f.concat(a.of(e),r)}return u.fromPromise(new Promise(function(n,i){o._client.subscribe(s,c,function(t,e){if(t)i(t);else{var r=c?c.qos:0,o=0<e.length?new b(e[0]):new b({topic:s,qos:r});n(o)}})})).pipe(i.switchMap(function(t){return f.concat(a.of(t),o.addTopic(s,t))}))}))},t.prototype.unsubscribeFrom=function(t){var o=this;return Array.isArray(t)?t.forEach(function(t){o.removeTopic(t)}):this.removeTopic(t),u.fromPromise(new Promise(function(e,r){o._client.unsubscribe(t,function(t){return t?r(t):e()})}))},t.prototype.publishTo=function(o,n,i){var s=this;return u.fromPromise(new Promise(function(e,r){var t;if(n instanceof Buffer)t=n;else switch(typeof n){case"string":case"number":case"boolean":t=n.toString();break;case"object":t=JSON.stringify(n)}s._client.publish(o,t,i,function(t){return t?r(t):e()})}))},t.prototype.end=function(t,e){var r=Object.keys(this._store);this.unsubscribeFrom(r),this._status.unsubscribe(),this._client.end(t,e)},t.prototype.status=function(){return this._status.pipe(i.distinctUntilChanged())},t.prototype.removeTopic=function(t){if(this._store[t]){this._store[t].stream.unsubscribe();var e=this._store,r=t,o=(e[r],function(t,e){var r={};for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&e.indexOf(o)<0&&(r[o]=t[o]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(o=Object.getOwnPropertySymbols(t);n<o.length;n++)e.indexOf(o[n])<0&&(r[o[n]]=t[o[n]])}return r}(e,["symbol"==typeof r?r:r+""]));this._store=o}},t.prototype.updateTopic=function(t,e){var r;try{r=JSON.parse(e)}catch(o){r=e}this._store[t].stream.next(r)},t.prototype.addTopic=function(t,e){return this._store[t]={grant:e,stream:new n.Subject},this._store[t].stream},t.prototype.throwError=function(){return r.Observable["throw"](new Error("No connection with MQTT."))},t}();h.decorators=[{type:e.Injectable}],h.ctorParameters=function(){return[{type:undefined,decorators:[{type:e.Inject,args:[p]}]},{type:undefined,decorators:[{type:e.Optional},{type:e.Inject,args:[l]}]}]};var m=function(){function e(){}return e.withOptions=function(t){return{ngModule:e,providers:[{provide:p,useValue:t}]}},e}();m.decorators=[{type:e.NgModule,args:[{providers:[h]}]}],m.ctorParameters=function(){return[]},t.MqttService=h,t.NgxMqttClientModule=m,t.SubscriptionGrant=b,t.ɵa=p,t.ɵb=l,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-mqtt-client.umd.min.js.map
